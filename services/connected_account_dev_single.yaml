# -*- coding: utf-8 -*-
# Copyright (c) 2016-present, CloudZero, Inc. All rights reserved.
# Licensed under the BSD-style license. See LICENSE file in the project root for full license information.

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: CloudZero Connected Account Template

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Required
      Parameters:
      - AccountName
    - Label:
        default: CloudZero Cross Account Access
      Parameters:
      - ExternalId
    ParameterLabels:
      AccountName:
        default: |
          Descriptive Alias for your AWS Account; Generated by you; Used to ID your accounts in CloudZero platform
      ExternalId:
        default: |
          Unique ExternalId for your Organization; Generated by CloudZero; Used for Cross Account Roles

Parameters:
  AccountName:
    Type: String
    Default: ''
    Description: |
      Optional Name you can set for your AWS Account; you can use this as a
      descriptive alias for AccountId. It's useful to set this here when you
      are automating provisioning many accounts with this template.
  ExternalId:
    Type: String
    Description: |
      Unique ExternalId for Customer Organization; for cross-account Role Access and
      associating this template with a Customer Organization
  Version:
    Type: String
    Default: 'latest'
    Description: |
      Version to target when deploying the stack. `latest` should be used by default.

Mappings:
  CallbackConfiguration:
    dev:
      # TODO: Get dynamically for namespaces
      ReactorAccountId: '998146006915'
      ReactorId: '67ad3e83-1ec5-4f4f-b505-c27e2758b990'
      ReactorCallbackUrl: 'https://qc8rbx9mcg.execute-api.us-east-1.amazonaws.com/alfa/v1/link'
  Defaults:
    Cur:
      BucketName: 'cz-cur-hourly-csv'

Conditions:
  ValidReactorCallbackUrl: !Not
    - !Equals [!FindInMap [CallbackConfiguration, dev, ReactorCallbackUrl], 'null']
  CreateResourceOwnerResources: !Equals [ !GetAtt DiscoveryResource.IsResourceOwnerAccount, 'true' ]
  CreateCloudTrailOwnerResources: !And [ !Not [ !Equals [ !GetAtt DiscoveryResource.CloudTrailSNSTopicArn, 'null' ] ], !Equals [ !GetAtt DiscoveryResource.IsCloudTrailOwnerAccount, 'true' ] ]
  CreateAuditResources: !And
    - !Not
      - !Equals [ !GetAtt DiscoveryResource.AuditCloudTrailBucketName, 'null' ]
    - !Equals [ !GetAtt DiscoveryResource.IsAuditAccount, 'true' ]
  ValidExistingBucketName: !Not [ !Equals [ !GetAtt DiscoveryResource.MasterPayerBillingBucketName, 'null' ] ]
  CreateMasterPayerCurAndBucketAndPolicy: !And
    - !Not
      - Condition: ValidExistingBucketName
    - !Equals [ !GetAtt DiscoveryResource.IsMasterPayerAccount, 'true' ]
  CreateMasterPayerPolicyForExistingCur: !And
    - Condition: ValidExistingBucketName
    - !Equals [ !GetAtt DiscoveryResource.IsMasterPayerAccount, 'true' ]
  CreateMasterPayerRoleAndPolicy: !Or
    - Condition: CreateMasterPayerPolicyForExistingCur
    - Condition: CreateMasterPayerCurAndBucketAndPolicy


Resources:
  # Discovery Resources
  DiscoveryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.11
      CodeUri:
        Bucket: !Sub 'cz-provision-account-${AWS::Region}'
        Key: !Sub ${Version}/services/discovery.zip
      Handler: src.app.handler
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Sid: CZDiscovery20190912
              Effect: Allow
              Action:
                - cloudtrail:DescribeTrails
                - s3:ListAllMyBuckets
                - cur:DescribeReportDefinitions
                - organizations:DescribeOrganization
              Resource: '*'
      Environment:
        Variables:
          VERSION: '20230523'

  DiscoveryResource:
    Type: Custom::Discovery
    Properties:
      ServiceToken: !GetAtt DiscoveryFunction.Arn
      AccountId: !Sub ${AWS::AccountId}
      Version: '20230523'

  # Resource Owner Resources
  ResourceOwnerRole:
    Type: AWS::IAM::Role
    Condition: CreateResourceOwnerResources
    Properties:
      Path: '/cloudzero/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub
                  - 'arn:aws:iam::${ReactorAccountId}:root'
                  - ReactorAccountId: !FindInMap [CallbackConfiguration, dev, ReactorAccountId]
            Action:
              - 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref ExternalId
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
        - arn:aws:iam::aws:policy/SecurityAudit
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
        - arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess

  ResourceOwnerRolePolicy:
    Type: AWS::IAM::Policy
    Condition: CreateResourceOwnerResources
    Properties:
      PolicyName: !Sub
        - 'cloudzero-resource-owner-policy-${ReactorAccountId}'
        - ReactorAccountId: !FindInMap [CallbackConfiguration, dev, ReactorAccountId]
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: CZCostMonitoring20240422
            Effect: Allow
            Action:
              - account:GetAccountInformation
              - billing:Get*
              - budgets:Describe*
              - budgets:View*
              - ce:Describe*
              - ce:Get*
              - ce:List*
              - consolidatedbilling:Get*
              - consolidatedbilling:List*
              - cur:Describe*
              - cur:Get*
              - cur:Validate*
              - cur:List*
              - freetier:Get*
              - invoicing:Get*
              - invoicing:List*
              - organizations:Describe*
              - organizations:List*
              - payments:Get*
              - payments:List*
              - pricing:*
              - tax:Get*
              - tax:List*
            Resource: "*"
          - Sid: CZActivityMonitoring20210423
            Effect: Allow
            Action:
              - cloudtrail:Get*
              - cloudtrail:List*
              - cloudtrail:Describe*
              - health:Describe*
              - support:DescribeTrustedAdvisor*
              - servicequotas:Get*
              - servicequotas:List*
              - resource-groups:Get*
              - resource-groups:List*
              - resource-groups:Search*
              - cloudformation:DescribeStacks
              - cloudformation:ListStackResources
              - tag:Get*
              - tag:Describe*
              - resource-explorer:List*
              - account:ListRegions
            Resource: "*"
          - Sid: CZReservedCapacity20190912
            Effect: Allow
            Action:
              - dynamodb:DescribeReserved*
              - ec2:DescribeReserved*
              - elasticache:DescribeReserved*
              - es:DescribeReserved*
              - rds:DescribeReserved*
              - redshift:DescribeReserved*
            Resource: "*"
          - Sid: CloudZeroContainerInsightsAccess20210423
            Effect: Allow
            Action:
              - logs:List*
              - logs:Describe*
              - logs:StartQuery
              - logs:StopQuery
              - logs:Filter*
              - logs:Get*
            Resource: arn:aws:logs:*:*:log-group:/aws/containerinsights/*
          - Sid: CloudZeroCloudWatchContainerLogStreamAccess20210906
            Effect: Allow
            Action:
              - logs:GetQueryResults
              - logs:DescribeLogGroups
            Resource: arn:aws:logs:*:*:log-group::log-stream:*
          - Sid: CloudZeroCloudWatchMetricsAccess20210423
            Effect: Allow
            Action:
              - autoscaling:Describe*
              - cloudwatch:Describe*
              - cloudwatch:Get*
              - cloudwatch:List*
            Resource: "*"
      Roles:
        - !Ref ResourceOwnerRole

  # CloudTrail Owner Resources
  SqsQueue:
    Type: 'AWS::SQS::Queue'
    Condition: CreateCloudTrailOwnerResources
    Properties:
      Tags:
        - Key: cloudzero-stack
          Value: !Ref AWS::StackName
        - Key: cloudzero-reactor-account-id
          Value: !FindInMap [CallbackConfiguration, dev, ReactorAccountId]

  SnsSubscription:
    Type: AWS::SNS::Subscription
    Condition: CreateCloudTrailOwnerResources
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt SqsQueue.Arn
      Region: !Select
        - 3
        - !Split [ ':', !GetAtt DiscoveryResource.CloudTrailSNSTopicArn ]
      TopicArn: !GetAtt DiscoveryResource.CloudTrailSNSTopicArn

  SqsPolicy:
    Type: 'AWS::SQS::QueuePolicy'
    Condition: CreateCloudTrailOwnerResources
    Properties:
      Queues:
        - !Ref SqsQueue
      PolicyDocument:
        Id: 'CloudZeroReactorQueuePolicy20190816'
        Version: '2012-10-17'
        Statement:
          - Sid: 'SNSTopicAccess20190816'
            Effect: Allow
            Action:
              - 'sqs:SendMessage'
            Principal:
              AWS: "*"
            Resource: "*"
            Condition:
              ArnEquals:
                'aws:SourceArn': !GetAtt DiscoveryResource.CloudTrailSNSTopicArn
          - Sid: 'ReactorAccess20190816'
            Effect: Allow
            Action:
              - 'sqs:*'
            Principal:
              AWS:
                - !Sub
                  - 'arn:aws:iam::${ReactorAccountId}:root'
                  - ReactorAccountId: !FindInMap [CallbackConfiguration, dev, ReactorAccountId]
            Resource: !GetAtt SqsQueue.Arn

  # Audit Resources
  AuditRole:
    Condition: CreateAuditResources
    Type: 'AWS::IAM::Role'
    Properties:
      Path: '/cloudzero/'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub
                  - 'arn:aws:iam::${ReactorAccountId}:root'
                  - ReactorAccountId: !FindInMap [CallbackConfiguration, dev, ReactorAccountId]
            Action:
              - 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref ExternalId

  AuditRolePolicy:
    Condition: CreateAuditResources
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Sub
        - 'cloudzero-audit-policy-${ReactorAccountId}'
        - ReactorAccountId: !FindInMap [CallbackConfiguration, dev, ReactorAccountId]
      Roles:
        - !Ref AuditRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AccessAuditCloudTrailBucket
            Effect: Allow
            Action:
              - 's3:Get*'
              - 's3:List*'
            Resource:
              - !Sub
                - 'arn:aws:s3:::${BucketName}'
                - BucketName: !GetAtt DiscoveryResource.AuditCloudTrailBucketName
              - !Sub
                - 'arn:aws:s3:::${BucketName}/*'
                - BucketName: !GetAtt DiscoveryResource.AuditCloudTrailBucketName

  # Master Payer Account Resources
  Role:
    Condition: CreateMasterPayerRoleAndPolicy
    Type: 'AWS::IAM::Role'
    Properties:
      Path: '/cloudzero/'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: czServiceAccount01
            Effect: Allow
            Principal:
              AWS:
                - !Sub
                  - 'arn:aws:iam::${ReactorAccountId}:root'
                  - ReactorAccountId: !FindInMap [CallbackConfiguration, dev, ReactorAccountId]
            Action:
              - 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref ExternalId
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
        - arn:aws:iam::aws:policy/SecurityAudit
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
        - arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess

  CostAndUsageReportResource:
    Condition: CreateMasterPayerCurAndBucketAndPolicy
    Type: 'Custom::CostAndUsageReport'
    Properties:
      ServiceToken: !GetAtt CostAndUsageReportLambda.Arn
      Region: !Ref AWS::Region
      BucketName: !Sub
        - '${BucketName}-${Id}'
        - { BucketName: !FindInMap [ Defaults, Cur, BucketName ],
            Id: !Select [ 2, !Split [ '/', !Ref 'AWS::StackId' ] ] }

  CostAndUsageReportRole:
    Condition: CreateMasterPayerCurAndBucketAndPolicy
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CurAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowLogging
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
              - Sid: AllowCreateCur
                Effect: Allow
                Action:
                  - 'cur:*'
                Resource: '*'
              - Sid: AllowVerifyCurBucket
                Effect: Allow
                Action:
                  - 's3:*'
                Resource:
                  - !Sub
                    - 'arn:aws:s3:::${BucketName}-${Id}'
                    - { BucketName: !FindInMap [ Defaults, Cur, BucketName ],
                        Id: !Select [ 2, !Split [ '/', !Ref 'AWS::StackId' ] ] }
                  - !Sub
                    - 'arn:aws:s3:::${BucketName}-${Id}/*'
                    - { BucketName: !FindInMap [ Defaults, Cur, BucketName ],
                        Id: !Select [ 2, !Split [ '/', !Ref 'AWS::StackId' ] ] }

  CostAndUsageReportLambda:
    Condition: CreateMasterPayerCurAndBucketAndPolicy
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: Create/Delete Cost and Usage Report
      Handler: index.handler
      Runtime: python3.11
      Role: !GetAtt CostAndUsageReportRole.Arn
      Timeout: 120
      Code:
        ZipFile: |
          import boto3
          import cfnresponse
          import json
          import logging
          import time

          cur = boto3.client('cur', region_name='us-east-1')  # cur is only in us-east-1
          logger = logging.getLogger()
          logger.setLevel(logging.INFO)

          def handler(event, context):
              result = cfnresponse.SUCCESS
              report_name = 'cloudzero-cur-hourly-csv'
              s3_prefix = 'cloudzero'
              report_s3_prefix = f'{s3_prefix}/{report_name}'

              try:
                  logger.info(f'Received event: {event}')
                  bucket_name = event['ResourceProperties']['BucketName']
                  current_region = event['ResourceProperties']['Region']
                  valid_regions = {'us-west-1','us-west-2','ap-northeast-1','ap-southeast-1',
                                   'eu-west-1','us-east-1','ap-southeast-2','eu-central-1'}
                  region = current_region if current_region in valid_regions else 'us-east-1'
                  s3 = boto3.resource('s3', region_name=region)
                  bucket = s3.Bucket(bucket_name)

                  if event['RequestType'] == 'Create':
                      logger.info(f'Creating {bucket_name} in {region}')
                      bucket.create(**({} if region == 'us-east-1' else {'CreateBucketConfiguration': {'LocationConstraint': region}}))
                      bucket.wait_until_exists()
                      policy = {
                          'Version': '2012-10-17',
                          'Statement': [
                              {
                                  'Sid': 'AddBillReportsGet',
                                  'Effect': 'Allow',
                                  'Principal': {
                                      'Service': 'billingreports.amazonaws.com'
                                  },
                                  'Action': [
                                      's3:GetBucketAcl',
                                      's3:GetBucketPolicy'
                                  ],
                                  'Resource': f'arn:aws:s3:::{bucket_name}'
                              },
                              {
                                  'Sid': 'AddBillReportsPut',
                                  'Effect': 'Allow',
                                  'Principal': {
                                      'Service': 'billingreports.amazonaws.com'
                                  },
                                  'Action': 's3:PutObject',
                                  'Resource': f'arn:aws:s3:::{bucket_name}/*'
                              }
                          ]
                      }
                      for attempt in range(5):
                        try:
                          logger.info(f'Adding bucket policy to {bucket_name}')
                          bucket.Policy().put(Policy=json.dumps(policy))
                        except:
                          time.sleep(1)
                        else:
                          break

                      for attempt in range(5):
                        try:
                          logger.info(f'Creating {report_name}')
                          cur.put_report_definition(
                              ReportDefinition={
                                  'AdditionalSchemaElements': ['RESOURCES'],
                                  'Compression': 'GZIP', 'Format': 'textORcsv',
                                  'RefreshClosedReports': True,
                                  'ReportName': report_name,
                                  'ReportVersioning': 'CREATE_NEW_REPORT',
                                  'S3Bucket': bucket_name, 'S3Prefix': s3_prefix,
                                  'S3Region': region, 'TimeUnit': 'HOURLY',
                              }
                          )
                        except:
                          time.sleep(1)
                        else:
                          break
                  elif event['RequestType'] == 'Update':
                      logger.warning(f'Update is unsupported')
                  elif event['RequestType'] == 'Delete':
                      logger.warning(f'We do not want to delete your billing data.')
              except Exception:
                  logger.error('Failed to Update Cur Resource', exc_info=True)
                  result = cfnresponse.FAILED
              finally:
                  cfnresponse.send(event, context, result, {'ReportS3Bucket': bucket_name, 'ReportS3Prefix': report_s3_prefix})

  RolePolicy:
    Condition: CreateMasterPayerRoleAndPolicy
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Sub
        - 'cloudzero-master-payer-policy-${ReactorAccountId}'
        - ReactorAccountId: !FindInMap [CallbackConfiguration, dev, ReactorAccountId]
      Roles:
        - !Ref Role
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: CZMasterPayerBillingBucket20190912
            Effect: Allow
            Action:
              - s3:Get*
              - s3:List*
            Resource: !If
              - CreateMasterPayerPolicyForExistingCur
              -
                - !Sub
                  - 'arn:aws:s3:::${BucketName}'
                  - BucketName: !GetAtt DiscoveryResource.MasterPayerBillingBucketName
                - !Sub
                  - 'arn:aws:s3:::${BucketName}/*'
                  - BucketName: !GetAtt DiscoveryResource.MasterPayerBillingBucketName
              -
                - !Sub
                  - 'arn:aws:s3:::${BucketName}-${Id}'
                  - { BucketName: !FindInMap [ Defaults, Cur, BucketName ],
                      Id: !Select [ 2, !Split [ '/', !Ref 'AWS::StackId' ] ] }
                - !Sub
                  - 'arn:aws:s3:::${BucketName}-${Id}/*'
                  - { BucketName: !FindInMap [ Defaults, Cur, BucketName ],
                      Id: !Select [ 2, !Split [ '/', !Ref 'AWS::StackId' ] ] }
          - Sid: CZCostMonitoring20240422
            Effect: Allow
            Action:
              - account:GetAccountInformation
              - billing:Get*
              - budgets:Describe*
              - budgets:View*
              - ce:Describe*
              - ce:Get*
              - ce:List*
              - consolidatedbilling:Get*
              - consolidatedbilling:List*
              - cur:Describe*
              - cur:Get*
              - cur:Validate*
              - cur:List*
              - freetier:Get*
              - invoicing:Get*
              - invoicing:List*
              - organizations:Describe*
              - organizations:List*
              - payments:Get*
              - payments:List*
              - pricing:*
              - tax:Get*
              - tax:List*
            Resource: "*"
          - Sid: CZActivityMonitoring20210423
            Effect: Allow
            Action:
              - cloudtrail:Get*
              - cloudtrail:List*
              - cloudtrail:Describe*
              - health:Describe*
              - support:DescribeTrustedAdvisor*
              - servicequotas:Get*
              - servicequotas:List*
              - resource-groups:Get*
              - resource-groups:List*
              - resource-groups:Search*
              - cloudformation:DescribeStacks
              - cloudformation:ListStackResources
              - tag:Get*
              - tag:Describe*
              - resource-explorer:List*
              - account:ListRegions
            Resource: "*"
          - Sid: CZReservedCapacity20190912
            Effect: Allow
            Action:
              - dynamodb:DescribeReserved*
              - ec2:DescribeReserved*
              - elasticache:DescribeReserved*
              - es:DescribeReserved*
              - rds:DescribeReserved*
              - redshift:DescribeReserved*
            Resource: "*"
          - Sid: CloudZeroContainerInsightsAccess20210423
            Effect: Allow
            Action:
              - logs:List*
              - logs:Describe*
              - logs:StartQuery
              - logs:StopQuery
              - logs:Filter*
              - logs:Get*
            Resource: arn:aws:logs:*:*:log-group:/aws/containerinsights/*
          - Sid: CloudZeroCloudWatchContainerLogStreamAccess20210906
            Effect: Allow
            Action:
              - logs:GetQueryResults
              - logs:DescribeLogGroups
            Resource: arn:aws:logs:*:*:log-group::log-stream:*
          - Sid: CloudZeroCloudWatchMetricsAccess20210423
            Effect: Allow
            Action:
              - autoscaling:Describe*
              - cloudwatch:Describe*
              - cloudwatch:Get*
              - cloudwatch:List*
            Resource: "*"

  # Notification Function Resources
  NotificationFunction:
    Type: AWS::Serverless::Function
    Condition: ValidReactorCallbackUrl
    Properties:
      Runtime: python3.11
      MemorySize: 512
      Timeout: 30
      CodeUri:
        Bucket: !Sub 'cz-provision-account-${AWS::Region}'
        Key: !Sub ${Version}/services/notification.zip
      Handler: src.app.handler
      Policies:
        - AWSCloudFormationReadOnlyAccess
      Environment:
        Variables:
          VERSION: '1'


  NotifyCloudZeroReactor:
    Type: Custom::NotifyCloudZero
    Condition: ValidReactorCallbackUrl
    Properties:
      Tags:
      - Key: cloudzero-stack
        Value: !Ref AWS::StackName
      - Key: cloudzero-reactor-account-id
        Value: !FindInMap [CallbackConfiguration, dev, ReactorAccountId]
      ServiceToken: !GetAtt NotificationFunction.Arn
      AccountId: !Ref AWS::AccountId
      Version: '1'
      # Parameters from Other Resources in this Stack
      ExternalId: !Ref ExternalId
      ReactorCallbackUrl: !FindInMap [CallbackConfiguration, dev, ReactorCallbackUrl]
      AccountName: !Ref AccountName
      Region: !Ref AWS::Region
      ReactorId: !FindInMap [CallbackConfiguration, dev, ReactorId]
      # References to this stack - notification function will query outputs
      Stacks:
        Discovery: !Ref AWS::StackName
        ResourceOwnerAccount: !Ref AWS::StackName
        CloudTrailOwnerAccount: !Ref AWS::StackName
        AuditAccount: !Ref AWS::StackName
        MasterPayerAccount: !Ref AWS::StackName
        LegacyAccount: !Ref AWS::StackName

Outputs:
  # Discovery Outputs
  AuditCloudTrailBucketName:
    Description: Audit CloudTrail bucket name
    Value: !GetAtt DiscoveryResource.AuditCloudTrailBucketName
  AuditCloudTrailBucketPrefix:
    Description: Audit CloudTrail bucket prefix
    Value: !GetAtt DiscoveryResource.AuditCloudTrailBucketPrefix
  CloudTrailSNSTopicArn:
    Description: CloudTrail SNS topic ARN
    Value: !GetAtt DiscoveryResource.CloudTrailSNSTopicArn
  CloudTrailTrailArn:
    Description: CloudTrail trail ARN
    Value: !GetAtt DiscoveryResource.CloudTrailTrailArn
  VisibleCloudTrailArns:
    Description: Visible CloudTrail ARNs
    Value: !GetAtt DiscoveryResource.VisibleCloudTrailArns
  IsAuditAccount:
    Description: Is audit account
    Value: !GetAtt DiscoveryResource.IsAuditAccount
  IsCloudTrailOwnerAccount:
    Description: Is CloudTrail owner account
    Value: !GetAtt DiscoveryResource.IsCloudTrailOwnerAccount
  IsMasterPayerAccount:
    Description: Is master payer account
    Value: !GetAtt DiscoveryResource.IsMasterPayerAccount
  IsOrganizationMasterAccount:
    Description: Is organization master account
    Value: !GetAtt DiscoveryResource.IsOrganizationMasterAccount
  IsOrganizationTrail:
    Description: Is organization trail
    Value: !GetAtt DiscoveryResource.IsOrganizationTrail
  IsResourceOwnerAccount:
    Description: Is resource owner account
    Value: !GetAtt DiscoveryResource.IsResourceOwnerAccount
  MasterPayerBillingBucketName:
    Description: Master payer billing bucket name
    Value: !GetAtt DiscoveryResource.MasterPayerBillingBucketName
  MasterPayerBillingBucketPath:
    Description: Master payer billing bucket path
    Value: !GetAtt DiscoveryResource.MasterPayerBillingBucketPath
  RemoteCloudTrailBucket:
    Description: Remote CloudTrail bucket
    Value: !GetAtt DiscoveryResource.RemoteCloudTrailBucket
  IsAccountOutsideOrganization:
    Description: Is account outside organization
    Value: !GetAtt DiscoveryResource.IsAccountOutsideOrganization
  # Resource Owner Outputs
  ResourceOwnerRoleArn:
    Condition: CreateResourceOwnerResources
    Value: !GetAtt ResourceOwnerRole.Arn
    Description: Resource Owner Cross Account Role ARN
  RoleArn:
    Description: Resource owner role ARN (for notification compatibility)
    Value: !If [ CreateResourceOwnerResources, !GetAtt ResourceOwnerRole.Arn, 'null' ]
  # CloudTrail Owner Outputs
  SQSQueueArn:
    Description: The CloudZero SQS queue
    Value: !If [ CreateCloudTrailOwnerResources, !GetAtt SqsQueue.Arn, 'null' ]
  SQSQueuePolicyName:
    Description: The CloudZero SQS queue policy
    Value: !If [ CreateCloudTrailOwnerResources, !Ref SqsPolicy, 'null' ]
  # Audit Outputs
  AuditRoleArn:
    Description: The cloudzero cross account role ARN
    Value: !If [ CreateAuditResources, !GetAtt AuditRole.Arn, 'null' ]
  # Master Payer Outputs
  MasterPayerRoleArn:
    Description: The cloudzero master payer role ARN
    Value: !If [ CreateMasterPayerRoleAndPolicy, !GetAtt Role.Arn, 'null' ]
  ReportS3Bucket:
    Description: The CUR bucket if it was created
    Value: !If [ CreateMasterPayerCurAndBucketAndPolicy, !GetAtt CostAndUsageReportResource.ReportS3Bucket, 'null' ]
  ReportS3Prefix:
    Description: The CUR bucket prefix if it was created
    Value: !If [ CreateMasterPayerCurAndBucketAndPolicy, !GetAtt CostAndUsageReportResource.ReportS3Prefix, 'null' ]
  # Notification Outputs
  NotificationFunctionArn:
    Condition: ValidReactorCallbackUrl
    Value: !GetAtt NotificationFunction.Arn
    Description: Notification Function ARN
  NotifyCloudZeroReactor:
    Value: !If
      - ValidReactorCallbackUrl
      - !Ref NotifyCloudZeroReactor
      - !Ref AWS::NoValue
