# This workflow will do a merge from one branch to another

name: Merge From To
description: Merge from one branch to another

inputs:
  from-sha:
    description: "Commit sha to merge from"
    required: true
  from-branch:
    description: "Branch to merge from"
    required: true
    default: "develop"
  to:
    description: "Branch to merge to"
    required: true
    default: "main"

runs:
  using: composite
  steps:
    - name: Generate a token for the GitHub App so that push triggers a workflow
      id: generate_token
      # this action is recommended in the GitHub docs
      # https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/making-authenticated-api-requests-with-a-github-app-in-a-github-actions-workflow
      # I reviewed the code, it's benign.
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.CLOUDZERO_GITHUB_ACTIONS_APP_ID }}
        private_key: ${{ secrets.CLOUDZERO_GITHUB_ACTIONS_APP_PRIVATE_KEY }}

    - uses: actions/checkout@v3
      # replace token with the token generated by the previous action, so all git commands use it
      with:
        ref: ${{ inputs.from-branch }}
        token: ${{ steps.generate_token.outputs.token }}

    - name: git config, merge, and push
      # replace GITHUB_TOKEN with the token generated by the prior action
      # https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow
      env:
        GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
      run: |
        git config --local user.email "ops@cloudzero.com"
        git config --local user.name "Automated CZ Release"
        git fetch --unshallow
        git checkout ${{ inputs.to}}
        git pull
        git merge --no-edit --ff-only ${{ inputs.from-sha }}
        git push origin ${{ inputs.to }}
